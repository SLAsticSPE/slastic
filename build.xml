<?xml version="1.0" encoding="UTF-8"?>
<project name="SLAstic" default="build-all" basedir=".">
    <property file="build.properties"/>

    <path id="classpath.libs">
        <pathelement path="${classpath}"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="."/>
    </path>

    <target name="init-version">
        <tstamp/>
        <!-- Names of the slastic runtime libraries that will be created
	     by the build process: -->
        <property name="slastic.version"
                  value="0.01a"/>
        <property name="slastic.monadapt.jar"
                  value="${dist.dir}/${slastic.monadapt.packagenamebase}-${slastic.version}.jar"/>
        <property name="slastic.control.jar"
                  value="${dist.dir}/${slastic.control.packagenamebase}-${slastic.version}.jar"/>
        <property name="slastic.sim.jar"
                  value="${dist.dir}/${slastic.sim.packagenamebase}-${slastic.version}.jar"/>
    </target>

    <target name="update-version" unless="version.noupdate"
            depends="init-version">
        <echo>Updating version string</echo>
        <replaceregexp file="src/org/trustsoft/slastic/control/Version.java"
                       match="VERSION = &quot;.*?&quot;"
                       replace="VERSION = &quot;${slastic.version}-${DSTAMP}&quot;"/>
        <replaceregexp match="&lt;version&gt;.*?&lt;/version&gt;"
                       replace="&lt;version&gt;${slastic.version}-${DSTAMP}&lt;/version&gt;">
            <fileset dir=".">
                <include name="pom_ant_slastic*.xml"/>
            </fileset>
        </replaceregexp>
    </target>

    <target name="build-all"
            depends="clean,init,build-slastic.monadapt,build-slastic.control,build-slastic.sim">
    </target>

    <condition property="no.slastic.monadapt.properties">
        <not>
            <available file="${slastic.monadapt.properties}"/>
        </not>
    </condition>

    <target name="init-slastic.monadapt-properties" if="no.slastic.monadapt.properties">
        <!-- if no slastic.monadapt.properties, copy example file automatically  -->
        <echo message="${slastic.monadapt.properties} not existing.
                       Creating default file."/>
        <copy file="${slastic.monadapt.properties.example}" tofile="${slastic.monadapt.properties}"/>
    </target>

    <condition property="no.slastic.control.properties">
        <not>
            <available file="${slastic.control.properties}"/>
        </not>
    </condition>

    <target name="init-slastic.control-properties" if="no.slastic.control.properties">
        <!-- if no slastic.control.properties, copy example file automatically  -->
        <echo message="${slastic.control.properties} not existing.
                       Creating default file."/>
        <copy file="${slastic.control.properties.example}" tofile="${slastic.control.properties}"/>
    </target>

    <condition property="no.slastic.sim.properties">
        <not>
            <available file="${slastic.sim.properties}"/>
        </not>
    </condition>

    <target name="init-slastic.sim-properties" if="no.slastic.sim.properties">
        <!-- if no slastic.sim.properties, copy example file automatically  -->
        <echo message="${slastic.sim.properties} not existing.
                       Creating default file."/>
        <copy file="${slastic.sim.properties.example}" tofile="${slastic.sim.properties}"/>
    </target>

    <target name="init" depends="update-version,init-slastic.monadapt-properties,init-slastic.control-properties,init-slastic.sim-properties">
        <!-- Register special aspectJ commands in ant - allow ant to use special AspectJ commands: -->
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpath="${aspectjtoolsjar}"/>
        <fail message="Critical error: AspectJ library not found
                       in ${aspectjtoolsjar}. 
                       Check your build.properties.">
            <condition>
                <not>
                    <available file="${aspectjtoolsjar}"/>
                </not>
            </condition>
        </fail>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.tests.dir}"/>
        <mkdir dir="tmp"/>
    </target>

    <target name="build-slastic.monadapt" depends="clean,init">
        <delete dir="${build.slastic.monadapt.dir}"/>
        <mkdir  dir="${build.slastic.monadapt.dir}"/>
        <mkdir  dir="${build.slastic.monadapt.dir}/META-INF"/>
        <javac destDir="${build.slastic.monadapt.dir}"
               source="1.5"
               srcdir="src"
               debug="true"
               classpathref="classpath.libs">
            <compilerarg value="-Xlint:all"/>
            <include name="org/trustsoft/slastic/monadapt/**"/>
        </javac>
        <copy file="${slastic.monadapt.properties}" todir="${build.slastic.monadapt.dir}/META-INF"/>
        <!-- We want to include the sources in this jar -->
        <copy todir="${build.slastic.monadapt.dir}/">
            <fileset dir="src">
                <include name="org/trustsoft/slastic/monadapt/**/*.java"/>
            </fileset>
        </copy>
        <jar destfile="${slastic.monadapt.jar}">
            <fileset dir="${build.slastic.monadapt.dir}"/>
        </jar>
    </target>

   <target name="build-slastic.control" depends="clean,init">
        <delete dir="${build.slastic.control.dir}"/>
        <mkdir  dir="${build.slastic.control.dir}"/>
        <mkdir  dir="${build.slastic.control.dir}/META-INF"/>
        <javac destDir="${build.slastic.control.dir}"
               source="1.5"
               srcdir="src"
               debug="true"
               classpathref="classpath.libs">
            <compilerarg value="-Xlint:all"/>
            <include name="org/trustsoft/slastic/control/**"/>
        </javac>
        <copy file="${slastic.control.properties}" todir="${build.slastic.control.dir}/META-INF"/>
        <!-- We want to include the sources in this jar -->
        <copy todir="${build.slastic.control.dir}/">
            <fileset dir="src">
                <include name="org/trustsoft/slastic/control/**/*.java"/>
            </fileset>
        </copy>
        <jar destfile="${slastic.control.jar}">
            <fileset dir="${build.slastic.control.dir}"/>
        </jar>
    </target>
    
  <target name="build-slastic.sim" depends="clean,init">
        <delete dir="${build.slastic.sim.dir}"/>
        <mkdir  dir="${build.slastic.sim.dir}"/>
        <mkdir  dir="${build.slastic.sim.dir}/META-INF"/>
        <javac destDir="${build.slastic.sim.dir}"
               source="1.5"
               srcdir="src"
               debug="true"
               classpathref="classpath.libs">
            <compilerarg value="-Xlint:all"/>
            <include name="org/trustsoft/slastic/sim/**"/>
        </javac>
        <copy file="${slastic.sim.properties}" todir="${build.slastic.sim.dir}/META-INF"/>
        <!-- We want to include the sources in this jar -->
        <copy todir="${build.slastic.sim.dir}/">
            <fileset dir="src">
                <include name="org/trustsoft/slastic/sim/**/*.java"/>
            </fileset>
        </copy>
        <jar destfile="${slastic.sim.jar}">
            <fileset dir="${build.slastic.sim.dir}"/>
        </jar>
    </target>

    <target name="clean">
	    <!-- <delete dir="tmp"/>-->
        <delete dir="${dist.dir}"/>
        <delete dir="${build.dir}"/>
    </target>
</project>
