This example executes SLAstic which is configured to 
use only dummy components. 

The file 'slastic.framework.properties' contains the 
configuration. 

When using custom components, the corresponding .jar file(s) 
need(s) to be placed into the example's lib/ folder and the 
configuration file needs to be adjusted accordingly.

1. Preparation:
1.1 Copy (or symlink) the following libraries from the dist/ 
    directory of SLAstic's binary distribution:

     slastic-<version>.jar

1.2 Copy (or symlink) the following libraries from the lib/
    directory of SLAstic's binary distribution:

     commons-cli-1.2.jar
     commons-logging-1.1.1.jar
     esper-<version>.jar
     org.eclipse.emf.common_<version>.jar
     org.eclipse.emf.ecore_<version>.jar
     ReconfigurationPlanMM_1.0.0.jar

     // if log4j (http://logging.apache.org/) shall be used:
     log4j-1.2.16.jar 
     // Note, that log4j requires to pass a configuration file 
     // as JVM argument (-Dlog4j.configuration).
     // 1.) The slastic-<version>.jar contains a configuration 
     //     which uses a console logger. This can be enabled 
     //     by passing the following argument to the JVM:
     //     -Dlog4j.configuration=META-INF/slastic.log4j.properties
     // 2.) The bin/ directory includes an example log4j configuration 
     //     file, log4j.properties.example, which redirects the 
     //	    logging output to a file named 'slastic.log'. 
     //	    Copy and adjust this configuration file, and pass the 
     //	    location to the JVM using the above-mentioned JVM argument.
     // 
     // If no log4j configuration could be found, log4j reports the following:
     //	   log4j:WARN No appenders could be found for logger (kieker.tools.slastic.common.util.PropertiesFileUtils).                                           //    log4j:WARN Please initialize the log4j system properly.                                                                                              //    log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
     // In this case, either make sure, that you passed the correct path 
     // to the configuration file or remove log4j from the classpath

2. Execution

You have (at least) the following two alternatives to 
start the SLAstic framework with the given configuration.
In both cases you will solely see the framework initialize
and terminate.

2.1 Using the start script bin/slastic.sh (actually does 2.2):

   $ bin/slastic.sh -f slastic.framework.properties
     
2.2 Calling java directly [Remember to change slastic-<version>.jar into the real file name!]:
   $ CLASSPATH=$(ls lib/*.jar | tr "\n" ":")
   $ java -Dlog4j.configuration=META-INF/slastic.log4j.properties -cp ${CLASSPATH} kieker.tools.slastic.plugins.starter.SLAsticStarter -f slastic.framework.properties

